<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="Marks-MacBook-Pro.local" name="pytest" skipped="0" tests="78" time="6.748" timestamp="2021-11-18T13:47:07.006063"><testcase classname="tests.test_furl.TestMetadata" name="test_metadata" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_add" time="0.005" /><testcase classname="tests.test_furl.TestPath" name="test_asdict" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_encoding" time="0.006" /><testcase classname="tests.test_furl.TestPath" name="test_equality" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_isabsolute" time="0.007" /><testcase classname="tests.test_furl.TestPath" name="test_isdir_isfile" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_itruediv" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_leading_slash" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_load" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_none" time="0.001"><failure message="AssertionError: assert '/a/b/c' == '/a/b/c/'&#10;  - /a/b/c/&#10;  ?       -&#10;  + /a/b/c">self = &lt;test_furl.TestPath testMethod=test_none&gt;

    def test_none(self):
        p = furl.Path(None)
        assert str(p) == ''
    
        p = furl.Path('/a/b/c')
&gt;       assert str(p) == '/a/b/c/'
E       AssertionError: assert '/a/b/c' == '/a/b/c/'
E         - /a/b/c/
E         ?       -
E         + /a/b/c

tests/test_furl.py:137: AssertionError</failure></testcase><testcase classname="tests.test_furl.TestPath" name="test_nonzero" time="0.000" /><testcase classname="tests.test_furl.TestPath" name="test_normalize" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_remove" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_set" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_truediv" time="0.001" /><testcase classname="tests.test_furl.TestPath" name="test_unicode" time="0.001" /><testcase classname="tests.test_furl.TestQuery" name="test_add" time="5.784" /><testcase classname="tests.test_furl.TestQuery" name="test_asdict" time="0.001" /><testcase classname="tests.test_furl.TestQuery" name="test_encode" time="0.007" /><testcase classname="tests.test_furl.TestQuery" name="test_equality" time="0.002" /><testcase classname="tests.test_furl.TestQuery" name="test_load" time="0.334" /><testcase classname="tests.test_furl.TestQuery" name="test_none" time="0.001" /><testcase classname="tests.test_furl.TestQuery" name="test_params" time="0.003" /><testcase classname="tests.test_furl.TestQuery" name="test_remove" time="0.012" /><testcase classname="tests.test_furl.TestQuery" name="test_set" time="0.272" /><testcase classname="tests.test_furl.TestQuery" name="test_special_characters" time="0.001" /><testcase classname="tests.test_furl.TestQuery" name="test_unicode" time="0.001" /><testcase classname="tests.test_furl.TestQuery" name="test_value_encoding_empty_vs_nonempty_key" time="0.001" /><testcase classname="tests.test_furl.TestQuery" name="test_various" time="0.007" /><testcase classname="tests.test_furl.TestQueryCompositionInterface" name="test_interface" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_add" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_asdict" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_basics" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_encoding" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_equality" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_load" time="0.002" /><testcase classname="tests.test_furl.TestFragment" name="test_none" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_nonzero" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_remove" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_set" time="0.001" /><testcase classname="tests.test_furl.TestFragment" name="test_unicode" time="0.001" /><testcase classname="tests.test_furl.TestFragmentCompositionInterface" name="test_interface" time="0.001" /><testcase classname="tests.test_furl.TestFurl" name="test_add" time="0.002" /><testcase classname="tests.test_furl.TestFurl" name="test_asdict" time="0.005" /><testcase classname="tests.test_furl.TestFurl" name="test_basic_manipulation" time="0.002" /><testcase classname="tests.test_furl.TestFurl" name="test_basics" time="0.007" /><testcase classname="tests.test_furl.TestFurl" name="test_constructor_and_set" time="0.001" /><testcase classname="tests.test_furl.TestFurl" name="test_equality" time="0.003" /><testcase classname="tests.test_furl.TestFurl" name="test_hosts" time="0.004" /><testcase classname="tests.test_furl.TestFurl" name="test_idna" time="0.002" /><testcase classname="tests.test_furl.TestFurl" name="test_is_valid_encoded_path_segment" time="0.000" /><testcase classname="tests.test_furl.TestFurl" name="test_is_valid_encoded_query_key" time="0.000" /><testcase classname="tests.test_furl.TestFurl" name="test_is_valid_encoded_query_value" time="0.000" /><testcase classname="tests.test_furl.TestFurl" name="test_is_valid_port" time="0.000" /><testcase classname="tests.test_furl.TestFurl" name="test_is_valid_scheme" time="0.000" /><testcase classname="tests.test_furl.TestFurl" name="test_join" time="0.013" /><testcase classname="tests.test_furl.TestFurl" name="test_join_path_segments" time="0.000" /><testcase classname="tests.test_furl.TestFurl" name="test_netloc" time="0.001" /><testcase classname="tests.test_furl.TestFurl" name="test_none" time="0.001" /><testcase classname="tests.test_furl.TestFurl" name="test_odd_urls" time="0.002" /><testcase classname="tests.test_furl.TestFurl" name="test_origin" time="0.002" /><testcase classname="tests.test_furl.TestFurl" name="test_path_itruediv" time="0.001" /><testcase classname="tests.test_furl.TestFurl" name="test_path_truediv" time="0.002" /><testcase classname="tests.test_furl.TestFurl" name="test_ports" time="0.003" /><testcase classname="tests.test_furl.TestFurl" name="test_remove" time="0.004" /><testcase classname="tests.test_furl.TestFurl" name="test_remove_path_segments" time="0.000" /><testcase classname="tests.test_furl.TestFurl" name="test_scheme" time="0.003" /><testcase classname="tests.test_furl.TestFurl" name="test_set" time="0.003" /><testcase classname="tests.test_furl.TestFurl" name="test_tostr" time="0.001" /><testcase classname="tests.test_furl.TestFurl" name="test_unicode" time="0.002" /><testcase classname="tests.test_furl.TestFurl" name="test_urlsplit" time="0.001" /><testcase classname="tests.test_furl.TestFurl" name="test_username_and_password" time="0.018" /><testcase classname="tests.test_furl.TestMeta" name="test_metadata_varibles" time="0.000" /><testcase classname="tests.test_omdict1D.TestOmdict1D" name="test_add" time="0.001" /><testcase classname="tests.test_omdict1D.TestOmdict1D" name="test_set" time="0.001" /><testcase classname="tests.test_omdict1D.TestOmdict1D" name="test_setitem" time="0.000" /><testcase classname="tests.test_omdict1D.TestOmdict1D" name="test_update_updateall" time="0.002" /></testsuite></testsuites>